# .bashrc : for all interactive shells

# Source global definitions
if [ -f /etc/bashrc ]; then
	. /etc/bashrc
fi

HISTSIZE= HISTFILESIZE=
shopt -s autocd;
shopt -s nocaseglob;
shopt -s globstar;
shopt -s histappend;
shopt -s cdspell;

# Check if we have an interactive shell
if [[ $- == *i* ]]; then
	stty -ixon 	# Disable START/STOP output control with ctrl-s and ctrl-q
	# export PS1="\[$(tput bold)\]\[$(tput setaf 1)\][\[$(tput setaf 7)\]\u\[$(tput setaf 1)\]@\[$(tput setaf 7)\]\h \[$(tput dim)\]\W\[$(tput setaf 1)\]]\[$(tput setaf 7)\]\\$ \[$(tput sgr0)\]"
fi

# Load all of our bash glory!
for file in $HOME/{.bash_aliases,.bash_functions,.bash_extra}
do
	[ -r "$file" ] && source "$file";
done;
unset file;

if [ -f /etc/bash_completion ]; then
    . /etc/bash_completion
fi

# If this is an xterm set the title to user@host:dir
case "$TERM" in
xterm*|rxvt*)
    PROMPT_COMMAND='echo -ne "\033]0;${USER}@${HOSTNAME}: ${PWD}\007"'

    # Show the currently running command in the terminal title:
    # http://www.davidpashley.com/articles/xterm-titles-with-bash.html
    show_command_in_title_bar()
    {
        case "$BASH_COMMAND" in
            *\033]0*)
                # The command is trying to set the title bar as well;
                # this is most likely the execution of $PROMPT_COMMAND.
                # In any case nested escapes confuse the terminal, so don't
                # output them.
                ;;
            *)
                echo -ne "\033]0;${USER}@${HOSTNAME}: ${BASH_COMMAND}\007"
                ;;
        esac
    }
    trap show_command_in_title_bar DEBUG
    ;;
*)
    ;;
esac

# fzf completion in bash
[ -f ~/.fzf.bash ] && source ~/.fzf.bash

# nvm, fix yo check!
if [ -d "$HOME/.nvm" ]; then
	export NVM_DIR="$HOME/.nvm"
	[ -s "$NVM_DIR/nvm.sh" ] && \. "$NVM_DIR/nvm.sh" # This loads nvm
	[ -s "$NVM_DIR/bash_completion" ] && \. "$NVM_DIR/bash_completion" # This loads nvm bash_completion
fi

